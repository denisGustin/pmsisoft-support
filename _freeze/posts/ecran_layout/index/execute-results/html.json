{
  "hash": "0e33ee13b20a4123a9912551e49f4fa4",
  "result": {
    "markdown": "---\ntitle: \"Ecran type PMSISoft\"\ndescription: |\n  Descriptif des écrans des familles \"Bases\", \"Analyses\" et \"ACE\"\nauthor: denis G\ndate: \"2022-12-27\"\ncategories: [Ecran]\npage-layout: full\n---\n\n\n## Introduction\n\nPour tous les champs PMSI, les écrans des familles \"Bases\", \"Analyses\" et \"ACE\" se présentent tous de la même façon.  \n\nChaque écran comprend 3 parties : \n\n- Des filtres  \n- Un tableau ou un graphique accompagné du tableau des données correspondantes  \n- Des liens pour exporter les données du tableau en csv.excel ou JSON  \n\nNous prenons l'exemple de l'écran \"Base des RUM\" pour illustrer.  \n\n## Filtres  \n\nUn même filtre est toujours affiché au même endroit dans tous les écrans concernés par ce filtre.  \n\nExemple des filtres de l'écran \"Base des RUM\"  \n\n\n## Tableaux  \n\n\n## Graphiques  \n\n\n## Exports  \n\nEn dessous des tableaux, 2 liens pour exporter les [mêmes]{.underline} données, l'un pour un export au format csv, l'autre pour un export au format JSON \n\n![](telechargement.png)\n\nLes données exportées comportent à minima les informations indivualisées[^1] du tableau et, très généralement, d'autres variables calculées par PMSISoft.  \n\nLes noms des variables dans les exports sont normalisés : pas d'espace, séparation par _, pas d'accent, que des minuscules, utilisation de préfixes et de suffixes homogènes et explicites[^2]\n\n### Export csv  \nFormat texte open source où les variables sont séparées par des ;  \nLes fichiers csv peuvent être lus facilement en Excel  \n\n### Export JSON  \nFormat texte structuré permettant d'exploiter facilement les données en R ou Python  \n\nImport des donnée dans un tibble R en une ligne  \n\nExemple avec un export `liste_rum_2023-01-27.json` déposé dans le répertoire de votre projet R de travail   \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(jsonlite)\n\nmes_rum <- jsonlite::fromJSON() %>% tibble::as_tibble()\n```\n:::\n\n\nLes variables exportables en accès Standard sont un sous-ensemble des variables exportables en accès Professionnel.  \nExemple : \n\n## Documentation  \n\nChaque écran est documenté via un post dédié sur ce blog. Ce post est accessible directement à partir du lien \"Documentation\" situé en bas d'écran.  \n\n[^1]: \"informations individualisées\" signifie quà chaque information correspondant une variable dans l'export alors que dans le tableau, pour des raisons pratiques et de présentation, plusieurs informations peuvent être affichées dans une même colonne.  \nExemple : \"code GHM avec son libellé\" affiché dans une colonne dans le tableau et qui correspond à 2 variables dans les exports.  \n\n[^2]: exemple \"n_\" pour un calcul de somme, \"nb_\" pour un nombre, \"no\" pour un numéro, \"_lib\" pour un libellé, ...\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}